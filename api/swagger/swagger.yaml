swagger: "2.0"
info:
  version: "0.0.1"
  title: CRYOSOFT API
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /api/v1
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: |
     For accessing the API a valid JWT token must be passed in all the queries in
     the 'Authorization' header.
  
  
     A valid JWT token is generated by the API and retourned as answer of a call
     to the route /login giving a valid user & password.
  
  
     The following syntax must be used in the 'Authorization' header :
  
         Bearer xxxxxx.yyyyyyy.zzzzzz
security:
  - Bearer: []

# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /login:
    post:
      security: [] # authentication not require for login
      operationId: login
      parameters: 
      - in: body 
        name: body 
        description: The username/password 
        required: true 
        schema: 
          $ref: '#/definitions/Login'
      responses:
        "200":
          description: login success
        "403":
          description: login failed (may be incorrect password or username, user got banned)
  /logout:
    get:
      operationId: logout
      security: [] # authentication not require for logout
      responses:
        "200":
          description: logout success
  /studies:
    get:
      operationId: findStudies
      description: Get a list of studies
      parameters:
        - name: mine
          in: query
          description: true will return studies of current logged in user, false for getting other studies
          required: false
          type: boolean
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Study"
    put:
      operationId: createStudy
      description: create a new study
      consumes:
        - application/json
      parameters:
        - in: body
          name: study
          description: The study to create.
          schema:
            $ref: "#/definitions/Study"
      responses:
        "200":
          description: OK, created
  /studies/{id}:
    get:
      operationId: getStudyById
      parameters:
        - name: id
          in: path
          description: Study ID
          required: true
          type: integer
      responses:
        "200":
          description: Successful retrieve the study
          schema:
            $ref: "#/definitions/Study"
    delete:
      operationId: deleteStudyById
      parameters:
        - name: id
          in: path
          description: Study ID
          required: true
          type: integer
      responses:
        "200":
          description: study was deleted successfully
  /studies/{id}/open:
    get:
      operationId: openStudy
      parameters:
        - name: id
          in: path
          required: true
          description: id study to open
          type: integer
      responses:
        "200":
          description: OK
  /studies/{id}/clone:
    put:
      operationId: saveStudyAs
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: id study to open.
        - in: formData
          name: name
          required: true
          type: string
          description: new study name.
      responses:
        "200":
          description: OK
  /equipments:
    get:
      description: get all available equipments
      operationId: getEquipments
      parameters:
      - name: energy
        in: query
        type: integer
      - name: manufacturer
        in: query
        type: integer
      - name: family
        in: query
        type: integer
      - name: equip_origin
        type: integer
        in: query
      - name: process_type
        in: query
        type: integer
      - name: model
        in: query
        type: integer
      - name: size
        in: query
        type: integer  
      responses:
        "200":
          description: todo ok
          schema:
            type: array
            items:
              $ref:  "#/definitions/Equipment"
  /equipments/{id}:
    get:
      description: get equipment by id
      parameters:
      - name: id
        in: path
        description: Equipment ID
        required: true
        type: integer
      operationId: getEquipmentById
      responses:
        "200":
          description: todo
          schema:
            $ref:  "#/definitions/Equipment"
  /productions/{id}:
    get:
      operationId: getProductionById
      description: get production by id
      parameters:
      - name: id
        in: path
        description: Production ID
        required: true
        type: integer
      responses:
        "200":
          description: todo
          schema:
            $ref:  "#/definitions/Production"
  /components:
    get:
      description: todo
      responses:
        "200":
          description: todo
  /users:
    get:
      description: todo
      responses:
        "200":
          description: todo
  /meshparamdef:
    get:
      operationId: getMeshParamDefByIdUser
      responses:
        "200":
          description: get meshparamdef by iduser
          schema:
            $ref: "#/definitions/MeshParamDef"
# complex objects have schema definitions
definitions:
  Login: 
    type: object 
    properties: 
      username: 
        type: string 
      password: 
        type: string
  Study:
    type: object
    properties:
      CALCULATION_MODE:
        type: integer
      CALCULATION_STATUS:
        type: integer
      CHAINING_ADD_COMP_ENABLE:
        type: integer
      CHAINING_CONTROLS:
        type: integer
      CHAINING_NODE_DECIM_ENABLE:
        type: integer
      COMMENT_TXT:
        type: string
      CUSTOMER:
        type: string
      HAS_CHILD:
        type: integer
      ID_HAVERAGE_RESULTS:
        type: integer
      ID_PACKING:
        type: integer
      ID_PRECALC_LDG_RATE_PRM:
        type: integer
      ID_PRICE:
        type: integer
      ID_PROD:
        type: integer
      ID_PRODUCTION:
        type: integer
      ID_REPORT:
        type: integer
      ID_STUDY:
        type: integer
      ID_STUDY_RESULTS:
        type: integer
      ID_TEMP_RECORD_PTS:
        type: integer
      ID_USER:
        type: integer
      OPEN_BY_OWNER:
        type: integer
      OPTION_CRYOPIPELINE:
        type: integer
      OPTION_ECO:
        type: integer
      OPTION_EXHAUSTPIPELINE:
        type: integer
      PARENT_ID:
        type: integer
      PARENT_STUD_EQP_ID:
        type: integer
      STUDY_NAME:
        type: string
      TO_RECALCULATE:
        type: integer
  Equipment:
    type: object
    properties:
      ID_EQUIP:
        type: integer
  Production:
    type: object
    properties:
      ID_PRODUCTION:
        type: integer
      ID_STUDY:
        type: integer
      DAILY_PROD:
        type: number
      DAILY_STARTUP:
        type: number
      WEEKLY_PROD:
        type: number
      PROD_FLOW_RATE:
        type: number
      NB_PROD_WEEK_PER_YEAR:
        type: number
      AMBIENT_TEMP:
        type: number
      AMBIENT_HUM:
        type: number
      AVG_T_DESIRED:
        type: number
      AVG_T_INITIAL:
        type: number
      APPROX_DWELLING_TIME:
        type: number
  MeshParamDef:
    type: object